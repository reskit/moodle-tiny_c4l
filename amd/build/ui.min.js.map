{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L UI.\n *\n * @module      tiny_c4l/ui\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {component} from './common';\nimport C4LModal from './modal';\nimport ModalFactory from 'core/modal_factory';\nimport {components as Components} from './components';\nimport {get_strings as getStrings} from 'core/str';\nimport {\n    isStudent,\n    getallowedComponents,\n    showPreview\n} from './options';\nimport ModalEvents from 'core/modal_events';\n\nlet userStudent = false;\nlet previewC4L = true;\nlet allowedComponents = [];\nlet Contexts = [];\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    userStudent = isStudent(editor);\n    previewC4L = showPreview(editor);\n    allowedComponents = getallowedComponents(editor);\n    displayDialogue(editor);\n};\n\n/**\n * Display modal\n * @param  {TinyMCE} editor\n */\nconst displayDialogue = async(editor) => {\n    const data = Object.assign({}, {});\n\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n        type: C4LModal.TYPE,\n        templateContext: await getTemplateContext(editor, data),\n        large: true,\n    });\n\n    // Set modal size when no preview.\n    if (!previewC4L) {\n        editor.targetElm.closest('body').classList.add('c4l-modal-no-preview');\n    }\n    modal.show();\n\n    // Event modal listener.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        handleModalHidden(editor);\n    });\n\n    // Event filters listener.\n    const filters = modal.getRoot()[0].querySelectorAll('.c4l-button-filter');\n    filters.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonFilterClick(event, modal);\n        });\n    });\n\n    modal.getRoot()[0].querySelector('.c4l-select-filter').addEventListener('change', (event) => {\n       handleSelectFilterChange(event, modal);\n    });\n\n    // Event buttons listeners.\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4lt-dialog-button');\n    buttons.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonClick(event, editor, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleButtonMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleButtonMouseEvent(event, modal, false);\n            });\n        }\n    });\n\n    // Event variants listeners.\n    const variants = modal.getRoot()[0].querySelectorAll('.c4l-button-variant');\n    variants.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleVariantClick(event, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleVariantMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleVariantMouseEvent(event, modal, false);\n            });\n        }\n    });\n};\n\n/**\n * Handle a change within filter select.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleSelectFilterChange = (event, modal) => {\n    const select = event.target.closest('select');\n\n    if (select) {\n        const currentContext = select.value;\n        if (Contexts.indexOf(currentContext) !== -1) {\n            // Select current button.\n            const buttons = modal.getRoot()[0]\n                .querySelectorAll('.c4l-buttons-filters button');\n            buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n            const button = modal.getRoot()[0]\n                .querySelector('.c4l-button-filter[data-filter=\"' + currentContext + '\"]');\n            button.classList.add('c4l-button-filter-enabled');\n\n            // Show/hide component buttons.\n            showContextButtons(modal, currentContext);\n        }\n    }\n};\n\n/**\n * Handle a click within filter button.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleButtonFilterClick = (event, modal) => {\n    const button = event.target.closest('button');\n\n    const currentContext = button.dataset.filter;\n    // Filter button.\n    if (Contexts.indexOf(currentContext) !== -1) {\n        // Select current button.\n        const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-filters button');\n        buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n        button.classList.add('c4l-button-filter-enabled');\n\n        // Select current option in select.\n        const select = modal.getRoot()[0].querySelector('.c4l-select-filter');\n        select.selectedIndex = Contexts.indexOf(currentContext);\n\n        // Show/hide component buttons.\n        showContextButtons(modal, currentContext);\n    }\n};\n\n/**\n * Handle when closing the Modal.\n *\n * @param {obj} editor\n */\nconst handleModalHidden = (editor) => {\n    editor.targetElm.closest('body').classList.remove('c4l-modal-no-preview');\n    // SAVE VARIANT STATES.\n};\n\n/**\n * Handle a click in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} editor\n * @param {obj} modal\n */\nconst handleButtonClick = (event, editor, modal) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n\n    // Component button.\n    if (Components?.[selectedButton]) {\n        const sel = editor.selection.getContent();\n        let componentCode = Components[selectedButton].code;\n        const placeholder = (sel.length > 0 ? sel : Components[selectedButton].text);\n\n        // Create a new node to replace the placeholder.\n        const timestamp = new Date().getTime();\n        const randomId = Math.round(Math.random() * 100000) + '-' + timestamp;\n        const newNode = document.createElement('span');\n        newNode.dataset.id = randomId;\n        newNode.innerHTML = placeholder;\n        componentCode = componentCode.replace('{{PLACEHOLDER}}', newNode.outerHTML);\n\n        // RETURN VARIANTS ACTIVE FOR THIS BUTTON.\n        // APPLY VARIANTS TO HTML COMPONENT.\n\n        // Sets new content.\n        editor.selection.setContent(componentCode);\n\n        // Select text.\n        const nodeSel = editor.dom.select('span[data-id=\"' + randomId + '\"]');\n        if (nodeSel?.[0]) {\n            editor.selection.select(nodeSel[0]);\n        }\n\n        modal.destroy();\n        editor.focus();\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleButtonMouseEvent = (event, modal, show) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n    const node = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-' + selectedButton + '\"]');\n    const previewDefault = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-default\"]');\n\n    if (node) {\n        if (show) {\n            previewDefault.classList.toggle('c4l-hidden');\n            node.classList.toggle('c4l-hidden');\n        } else {\n            node.classList.toggle('c4l-hidden');\n            previewDefault.classList.toggle('c4l-hidden');\n        }\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a variant button.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleVariantMouseEvent = (event, modal, show) => {\n    const variant = event.target.closest('span');\n    const selectedVariant = 'c4l-' + variant.dataset.variant + '-variant';\n    const variantEnabled = variant.dataset.state == 'on';\n    const button = event.target.closest('button');\n    const selectedButton = button.dataset.id;\n    const componentClass = button.dataset.classcomponent;\n    const previewComponent = modal.getRoot()[0]\n        .querySelector('div[data-id=\"code-preview-' + selectedButton + '\"] .' + componentClass);\n\n    if (previewComponent && !variantEnabled) {\n        if (show) {\n            previewComponent.classList.add(selectedVariant);\n        } else {\n            previewComponent.classList.remove(selectedVariant);\n        }\n    }\n};\n\n\n/**\n * Handle a mouse event within the variant buttons.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n */\nconst handleVariantClick = (event, modal) => {\n    event.stopPropagation();\n    const variant = event.target.closest('span');\n    const selectedVariant = 'c4l-' + variant.dataset.variant + '-variant';\n    const button = event.target.closest('button');\n    const selectedButton = button.dataset.id;\n    const componentClass = button.dataset.classcomponent;\n    const previewComponent = modal.getRoot()[0]\n        .querySelector('div[data-id=\"code-preview-' + selectedButton + '\"] .' + componentClass);\n\n    if (variant.dataset.state == 'on') {\n        variant.dataset.state = 'off';\n        variant.classList.remove(variant.dataset.variant + '-variant-on');\n        variant.classList.add(variant.dataset.variant + '-variant-off');\n        variant.classList.remove('on');\n        previewComponent.classList.remove(selectedVariant);\n    } else {\n        variant.dataset.state = 'on';\n        variant.classList.remove(variant.dataset.variant + '-variant-off');\n        variant.classList.add(variant.dataset.variant + '-variant-on');\n        variant.classList.add('on');\n        previewComponent.classList.add(selectedVariant);\n    }\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = async(editor, data) => {\n    return Object.assign({}, {\n        elementid: editor.id,\n        buttons: await getButtons(editor),\n        filters: await getFilters(),\n        preview: previewC4L,\n    }, data);\n};\n\n/**\n * Get the C4L filters for the dialogue.\n *\n * @returns {object} data\n */\nconst getFilters = async() => {\n    const filters = [];\n    const stringValues = await getStrings(Contexts.map((key) => ({key, component})));\n\n    // Iterate over contexts.\n    Contexts.map((context, index) => {\n        filters.push({\n            name: stringValues[index],\n            type: context,\n            filterClass: index === 0 ? 'c4l-button-filter-enabled' : '',\n        });\n    });\n\n    return filters;\n};\n\n/**\n * Get the C4L buttons for the dialogue.\n *\n * @param {Editor} editor\n * @returns {object} buttons\n */\nconst getButtons = async(editor) => {\n    const buttons = [];\n    const strings = await getAllStrings();\n    const sel = editor.selection.getContent();\n    let componentCode = '';\n    let placeholder = '';\n\n    // Iterate over components.\n    Components.map((component, index) => {\n        if (!userStudent || (userStudent && allowedComponents.includes(component.name))) {\n            if (previewC4L) {\n                placeholder = (sel.length > 0 ? sel : component.text);\n                componentCode = component.code;\n                componentCode = componentCode.replace('{{PLACEHOLDER}}', placeholder);\n            }\n\n            // Save contexts.\n            if (Contexts.indexOf(component.type) === -1) {\n                Contexts.push(component.type);\n            }\n\n            buttons.push({\n                id: index,\n                name: strings.get(component.name),\n                type: component.type,\n                imageClass: component.imageClass,\n                classComponent: component.imageClass.replace('-icon', ''),\n                htmlcode: componentCode,\n                variants: getVariantsState(component.variants, strings),\n            });\n\n            // Add class to hide button.\n            if (Contexts.indexOf(component.type) !== 0) {\n                buttons[buttons.length - 1].imageClass += ' c4l-hidden';\n            }\n        }\n    });\n\n    return buttons;\n};\n\n/**\n * Get variants for the dialogue.\n * @param  {object} elements\n * @param  {object} strings\n * @return {object} Variants for a component\n */\nconst getVariantsState = (elements, strings) => {\n    const variants = [];\n\n    // Max 3 variants.\n    if (elements.length > 3) {\n        elements = elements.slice(0, 2);\n    }\n\n    elements.map((variant, index) => {\n         variants.push({\n            id: index,\n            name: variant,\n            state: 'off',\n            imageClass: variant + '-variant-' + 'off',\n            title: strings.get(variant),\n        });\n    });\n\n    return variants;\n};\n\n/**\n * Show/hide buttons depend on selected context.\n * @param  {object} modal\n * @param  {String} context\n */\nconst showContextButtons = (modal, context) => {\n    const showNodes = modal.getRoot()[0].querySelectorAll('button[data-type=\"' + context + '\"]');\n    const hideNodes = modal.getRoot()[0].querySelectorAll('button[data-type]:not([data-type=\"' + context + '\"])');\n\n    showNodes.forEach(node => node.classList.remove('c4l-hidden'));\n    hideNodes.forEach(node => node.classList.add('c4l-hidden'));\n};\n\n/**\n * Get language strings.\n *\n * @return {object} Language strings\n */\nconst getAllStrings = async() => {\n    const keys = [];\n\n    Components.map(element => {\n        keys.push(element.name);\n        element.variants.map(variant => {\n            if (keys.indexOf(variant) === -1) {\n                keys.push(variant);\n            }\n        });\n    });\n\n    const stringValues = await getStrings(keys.map((key) => ({key, component})));\n    return new Map(keys.map((key, index) => ([key, stringValues[index]])));\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_modal","_modal_factory","_modal_events","userStudent","previewC4L","allowedComponents","Contexts","_exports","handleAction","editor","isStudent","showPreview","getallowedComponents","displayDialogue","async","data","Object","assign","modal","ModalFactory","create","type","C4LModal","TYPE","templateContext","getTemplateContext","large","targetElm","closest","classList","add","show","getRoot","on","ModalEvents","hidden","handleModalHidden","querySelectorAll","forEach","node","addEventListener","event","handleButtonFilterClick","querySelector","handleSelectFilterChange","handleButtonClick","handleButtonMouseEvent","handleVariantClick","handleVariantMouseEvent","select","target","currentContext","value","indexOf","remove","showContextButtons","button","dataset","filter","selectedIndex","selectedButton","id","Components","components","sel","selection","getContent","componentCode","code","placeholder","length","text","timestamp","Date","getTime","randomId","Math","round","random","newNode","document","createElement","innerHTML","replace","outerHTML","setContent","nodeSel","dom","destroy","focus","previewDefault","toggle","variant","selectedVariant","variantEnabled","state","componentClass","classcomponent","previewComponent","stopPropagation","elementid","buttons","getButtons","filters","getFilters","preview","stringValues","getStrings","map","key","component","context","index","push","name","filterClass","strings","getAllStrings","includes","get","imageClass","classComponent","htmlcode","variants","getVariantsState","elements","slice","title","showNodes","hideNodes","keys","element","Map"],"mappings":"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"}