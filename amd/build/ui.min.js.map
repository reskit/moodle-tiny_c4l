{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L UI.\n *\n * @module      tiny_c4l/ui\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {component} from './common';\nimport C4LModal from './modal';\nimport ModalFactory from 'core/modal_factory';\nimport {components as Components} from './components';\nimport {get_strings as getStrings} from 'core/str';\nimport {\n    isStudent,\n    getallowedComponents,\n    showPreview\n} from './options';\nimport ModalEvents from 'core/modal_events';\nimport {\n    addVariant,\n    getVariantsClass,\n    getVariantHtml,\n    getVariantsHtml,\n    loadVariantPreferences,\n    removeVariant,\n    saveVariantPreferences,\n    variantExists\n} from './variantslib';\n\nlet userStudent = false;\nlet previewC4L = true;\nlet allowedComponents = [];\nlet Contexts = [];\n\n/**\n * Handle action\n *\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    userStudent = isStudent(editor);\n    previewC4L = showPreview(editor);\n    allowedComponents = getallowedComponents(editor);\n    loadVariantPreferences().then(displayDialogue(editor));\n};\n\n/**\n * Display modal\n *\n * @param  {TinyMCE} editor\n */\nconst displayDialogue = async(editor) => {\n    const data = Object.assign({}, {});\n\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n        type: C4LModal.TYPE,\n        templateContext: await getTemplateContext(editor, data),\n        large: true,\n    });\n\n    // Set modal size when no preview.\n    if (!previewC4L) {\n        editor.targetElm.closest('body').classList.add('c4l-modal-no-preview');\n    }\n    modal.show();\n\n    // Event modal listener.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        handleModalHidden(editor);\n    });\n\n    // Event filters listener.\n    const filters = modal.getRoot()[0].querySelectorAll('.c4l-button-filter');\n    filters.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonFilterClick(event, modal);\n        });\n    });\n\n    modal.getRoot()[0].querySelector('.c4l-select-filter').addEventListener('change', (event) => {\n       handleSelectFilterChange(event, modal);\n    });\n\n    // Event buttons listeners.\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4lt-dialog-button');\n    buttons.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonClick(event, editor, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleButtonMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleButtonMouseEvent(event, modal, false);\n            });\n        }\n    });\n\n    // Event variants listeners.\n    const variants = modal.getRoot()[0].querySelectorAll('.c4l-button-variant');\n    variants.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleVariantClick(event, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleVariantMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleVariantMouseEvent(event, modal, false);\n            });\n        }\n    });\n};\n\n/**\n * Handle a change within filter select.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleSelectFilterChange = (event, modal) => {\n    const select = event.target.closest('select');\n\n    if (select) {\n        const currentContext = select.value;\n        if (Contexts.indexOf(currentContext) !== -1) {\n            // Select current button.\n            const buttons = modal.getRoot()[0]\n                .querySelectorAll('.c4l-buttons-filters button');\n            buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n            const button = modal.getRoot()[0]\n                .querySelector('.c4l-button-filter[data-filter=\"' + currentContext + '\"]');\n            button.classList.add('c4l-button-filter-enabled');\n\n            // Show/hide component buttons.\n            showContextButtons(modal, currentContext);\n        }\n    }\n};\n\n/**\n * Handle a click within filter button.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleButtonFilterClick = (event, modal) => {\n    const button = event.target.closest('button');\n\n    const currentContext = button.dataset.filter;\n    // Filter button.\n    if (Contexts.indexOf(currentContext) !== -1) {\n        // Select current button.\n        const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-filters button');\n        buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n        button.classList.add('c4l-button-filter-enabled');\n\n        // Select current option in select.\n        const select = modal.getRoot()[0].querySelector('.c4l-select-filter');\n        select.selectedIndex = Contexts.indexOf(currentContext);\n\n        // Show/hide component buttons.\n        showContextButtons(modal, currentContext);\n    }\n};\n\n/**\n * Handle when closing the Modal.\n *\n * @param {obj} editor\n */\nconst handleModalHidden = (editor) => {\n    editor.targetElm.closest('body').classList.remove('c4l-modal-no-preview');\n    saveVariantPreferences();\n};\n\n/**\n * Handle a click in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} editor\n * @param {obj} modal\n */\nconst handleButtonClick = (event, editor, modal) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n\n    // Component button.\n    if (Components?.[selectedButton]) {\n        const sel = editor.selection.getContent();\n        let componentCode = Components[selectedButton].code;\n        const placeholder = (sel.length > 0 ? sel : Components[selectedButton].text);\n\n        // Create a new node to replace the placeholder.\n        const timestamp = new Date().getTime();\n        const randomId = Math.round(Math.random() * 100000) + '-' + timestamp;\n        const newNode = document.createElement('span');\n        newNode.dataset.id = randomId;\n        newNode.innerHTML = placeholder;\n        componentCode = componentCode.replace('{{PLACEHOLDER}}', newNode.outerHTML);\n\n        // Return active variants for current component.\n        const variants = getVariantsClass(Components[selectedButton].name);\n\n        // Apply variants to html component.\n        if (variants.length > 0) {\n            componentCode = componentCode.replace('{{VARIANTS}}', variants.join(' '));\n            componentCode = componentCode.replace('{{VARIANTSHTML}}', getVariantsHtml(Components[selectedButton].name));\n        } else {\n            componentCode = componentCode.replace('{{VARIANTS}}', '');\n            componentCode = componentCode.replace('{{VARIANTSHTML}}', '');\n        }\n\n        // Sets new content.\n        editor.selection.setContent(componentCode);\n\n        // Select text.\n        const nodeSel = editor.dom.select('span[data-id=\"' + randomId + '\"]');\n        if (nodeSel?.[0]) {\n            editor.selection.select(nodeSel[0]);\n        }\n\n        modal.destroy();\n        editor.focus();\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleButtonMouseEvent = (event, modal, show) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n    const node = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-' + selectedButton + '\"]');\n    const previewDefault = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-default\"]');\n\n    if (node) {\n        if (show) {\n            previewDefault.classList.toggle('c4l-hidden');\n            node.classList.toggle('c4l-hidden');\n        } else {\n            node.classList.toggle('c4l-hidden');\n            previewDefault.classList.toggle('c4l-hidden');\n        }\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a variant button.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleVariantMouseEvent = (event, modal, show) => {\n    const variant = event.target.closest('span');\n    const variantEnabled = variant.dataset.state == 'on';\n    const button = event.target.closest('button');\n\n    if (!variantEnabled) {\n        updateVariantComponentState(variant, button, modal, show, false);\n    }\n};\n\n\n/**\n * Handle a mouse event within the variant buttons.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n */\nconst handleVariantClick = (event, modal) => {\n    event.stopPropagation();\n    const variant = event.target.closest('span');\n    const button = event.target.closest('button');\n    updateVariantComponentState(variant, button, modal, false, true);\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = async(editor, data) => {\n    return Object.assign({}, {\n        elementid: editor.id,\n        buttons: await getButtons(editor),\n        filters: await getFilters(),\n        preview: previewC4L,\n    }, data);\n};\n\n/**\n * Get the C4L filters for the dialogue.\n *\n * @returns {object} data\n */\nconst getFilters = async() => {\n    const filters = [];\n    const stringValues = await getStrings(Contexts.map((key) => ({key, component})));\n\n    // Iterate over contexts.\n    Contexts.map((context, index) => {\n        filters.push({\n            name: stringValues[index],\n            type: context,\n            filterClass: index === 0 ? 'c4l-button-filter-enabled' : '',\n        });\n    });\n\n    return filters;\n};\n\n/**\n * Get the C4L buttons for the dialogue.\n *\n * @param {Editor} editor\n * @returns {object} buttons\n */\nconst getButtons = async(editor) => {\n    const buttons = [];\n    const strings = await getAllStrings();\n    const sel = editor.selection.getContent();\n    let componentCode = '';\n    let placeholder = '';\n    let variants = [];\n\n    // Iterate over components.\n    Components.map((component, index) => {\n        if (!userStudent || (userStudent && allowedComponents.includes(component.name))) {\n            if (previewC4L) {\n                placeholder = (sel.length > 0 ? sel : component.text);\n                componentCode = component.code;\n                componentCode = componentCode.replace('{{PLACEHOLDER}}', placeholder);\n                // Return active variants for component.\n                variants = getVariantsClass(component.name);\n\n                // Apply class variants and html to html component.\n                const variantsNode = document.createElement('span');\n                variantsNode.dataset.id = 'variantHTML-' + component.id;\n                if (variants.length > 0) {\n                    componentCode = componentCode.replace('{{VARIANTS}}', variants.join(' '));\n                    variantsNode.innerHTML = getVariantsHtml(component.name);\n                    componentCode = componentCode.replace('{{VARIANTSHTML}}', variantsNode.outerHTML);\n                } else {\n                    componentCode = componentCode.replace('{{VARIANTS}}', '');\n                    componentCode = componentCode.replace('{{VARIANTSHTML}}', variantsNode.outerHTML);\n                }\n            }\n\n            // Save contexts.\n            if (Contexts.indexOf(component.type) === -1) {\n                Contexts.push(component.type);\n            }\n\n            buttons.push({\n                id: index,\n                name: strings.get(component.name),\n                type: component.type,\n                imageClass: component.imageClass,\n                classComponent: 'c4lv-' + component.name,\n                htmlcode: componentCode,\n                variants: getVariantsState(component.name, component.variants, strings),\n            });\n\n            // Add class to hide button.\n            if (Contexts.indexOf(component.type) !== 0) {\n                buttons[buttons.length - 1].imageClass += ' c4l-hidden';\n            }\n        }\n    });\n\n    return buttons;\n};\n\n/**\n * Get variants for the dialogue.\n *\n * @param  {string} component\n * @param  {object} elements\n * @param  {object} strings\n * @return {object} Variants for a component\n */\nconst getVariantsState = (component, elements, strings) => {\n    const variants = [];\n    let variantState = '';\n    let variantClass = '';\n\n    // Max 3 variants.\n    if (elements.length > 3) {\n        elements = elements.slice(0, 2);\n    }\n\n    elements.map((variant, index) => {\n        if (variantExists(component, variant)) {\n            variantState = 'on';\n            variantClass = 'on ';\n        } else {\n            variantState = 'off';\n            variantClass = '';\n        }\n        variantClass += variant + '-variant-' + variantState;\n        variants.push({\n            id: index,\n            name: variant,\n            state: variantState,\n            imageClass: variantClass,\n            title: strings.get(variant),\n        });\n    });\n\n    return variants;\n};\n\n/**\n * Update a variant component UI.\n *\n * @param {obj} variant\n * @param {obj} button\n * @param {obj} modal\n * @param {bool} show\n * @param {bool} updateHtml\n */\nconst updateVariantComponentState = (variant, button, modal, show, updateHtml) => {\n    const selectedVariant = 'c4l-' + variant.dataset.variant + '-variant';\n    const selectedButton = button.dataset.id;\n    const componentClass = button.dataset.classcomponent;\n    const previewComponent = modal.getRoot()[0]\n        .querySelector('div[data-id=\"code-preview-' + selectedButton + '\"] .' + componentClass);\n    const variantPreview = modal.getRoot()[0]\n        .querySelector('span[data-id=\"variantHTML-' + selectedButton + '\"]');\n    let variantsHtml = '';\n\n    if (previewComponent) {\n        if (updateHtml) {\n            if (variant.dataset.state == 'on') {\n                removeVariant(Components[selectedButton].name, variant.dataset.variant);\n                updateVariantButtonState(variant, false);\n                previewComponent.classList.remove(selectedVariant);\n            } else {\n                addVariant(Components[selectedButton].name, variant.dataset.variant);\n                updateVariantButtonState(variant, true);\n                previewComponent.classList.add(selectedVariant);\n            }\n\n            // Update variant preview HTML.\n            if (variantPreview) {\n                variantPreview.innerHTML = getVariantsHtml(Components[selectedButton].name);\n            }\n        } else {\n            variantsHtml = getVariantsHtml(Components[selectedButton].name);\n            if (show) {\n                previewComponent.classList.add(selectedVariant);\n                variantsHtml += getVariantHtml(variant.dataset.variant);\n            } else {\n                previewComponent.classList.remove(selectedVariant);\n            }\n\n            // Update variant preview HTML.\n            if (variantPreview) {\n                variantPreview.innerHTML = variantsHtml;\n            }\n        }\n    } else {\n        // Update variants preferences.\n        if (variant.dataset.state == 'on') {\n            removeVariant(Components[selectedButton].name, variant.dataset.variant);\n            updateVariantButtonState(variant, false);\n        } else {\n            addVariant(Components[selectedButton].name, variant.dataset.variant);\n            updateVariantButtonState(variant, true);\n        }\n    }\n};\n\n/**\n * Update a variant button UI.\n *\n * @param {obj} variant\n * @param {bool} activate\n */\nconst updateVariantButtonState = (variant, activate) => {\n    if (activate) {\n        variant.dataset.state = 'on';\n        variant.classList.remove(variant.dataset.variant + '-variant-off');\n        variant.classList.add(variant.dataset.variant + '-variant-on');\n        variant.classList.add('on');\n    } else {\n        variant.dataset.state = 'off';\n        variant.classList.remove(variant.dataset.variant + '-variant-on');\n        variant.classList.add(variant.dataset.variant + '-variant-off');\n        variant.classList.remove('on');\n    }\n};\n\n/**\n * Show/hide buttons depend on selected context.\n *\n * @param  {object} modal\n * @param  {String} context\n */\nconst showContextButtons = (modal, context) => {\n    const showNodes = modal.getRoot()[0].querySelectorAll('button[data-type=\"' + context + '\"]');\n    const hideNodes = modal.getRoot()[0].querySelectorAll('button[data-type]:not([data-type=\"' + context + '\"])');\n\n    showNodes.forEach(node => node.classList.remove('c4l-hidden'));\n    hideNodes.forEach(node => node.classList.add('c4l-hidden'));\n};\n\n/**\n * Get language strings.\n *\n * @return {object} Language strings\n */\nconst getAllStrings = async() => {\n    const keys = [];\n\n    Components.map(element => {\n        keys.push(element.name);\n        element.variants.map(variant => {\n            if (keys.indexOf(variant) === -1) {\n                keys.push(variant);\n            }\n        });\n    });\n\n    const stringValues = await getStrings(keys.map((key) => ({key, component})));\n    return new Map(keys.map((key, index) => ([key, stringValues[index]])));\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_modal","_modal_factory","_modal_events","userStudent","previewC4L","allowedComponents","Contexts","_exports","handleAction","editor","isStudent","showPreview","getallowedComponents","loadVariantPreferences","then","displayDialogue","async","data","Object","assign","modal","ModalFactory","create","type","C4LModal","TYPE","templateContext","getTemplateContext","large","targetElm","closest","classList","add","show","getRoot","on","ModalEvents","hidden","handleModalHidden","querySelectorAll","forEach","node","addEventListener","event","handleButtonFilterClick","querySelector","handleSelectFilterChange","handleButtonClick","handleButtonMouseEvent","handleVariantClick","handleVariantMouseEvent","select","target","currentContext","value","indexOf","remove","showContextButtons","button","dataset","filter","selectedIndex","saveVariantPreferences","selectedButton","id","Components","components","sel","selection","getContent","componentCode","code","placeholder","length","text","timestamp","Date","getTime","randomId","Math","round","random","newNode","document","createElement","innerHTML","replace","outerHTML","variants","getVariantsClass","name","join","getVariantsHtml","setContent","nodeSel","dom","destroy","focus","previewDefault","toggle","variant","variantEnabled","state","updateVariantComponentState","stopPropagation","elementid","buttons","getButtons","filters","getFilters","preview","stringValues","getStrings","map","key","component","context","index","push","filterClass","strings","getAllStrings","includes","variantsNode","get","imageClass","classComponent","htmlcode","getVariantsState","elements","variantState","variantClass","slice","variantExists","title","updateHtml","selectedVariant","componentClass","classcomponent","previewComponent","variantPreview","variantsHtml","removeVariant","updateVariantButtonState","addVariant","getVariantHtml","activate","showNodes","hideNodes","keys","element","Map"],"mappings":"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"}