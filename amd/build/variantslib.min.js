define("tiny_c4l/variantslib",["exports","core/ajax","core/notification","./components","./variants"],(function(_exports,_ajax,_notification,_components,_variants){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Variants helper for C4L plugin.
   *
   * @module      tiny_c4l/variantslib
   * @copyright   2023 Marc Catal√† <reskit@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.variantExists=_exports.saveVariantPreferences=_exports.removeVariant=_exports.loadVariantPreferences=_exports.getVariantsHtml=_exports.getVariantsClass=_exports.getVariantHtml=_exports.addVariant=void 0,_ajax=_interopRequireDefault(_ajax),_notification=_interopRequireDefault(_notification);let variantPreferences={};_exports.loadVariantPreferences=async()=>{const request={methodname:"core_user_get_user_preferences",args:{name:"c4l_components_variants"}};return _ajax.default.call([request])[0].then((result=>{let comp={},rawPreferences={},variantObj={};try{rawPreferences=JSON.parse(result.preferences[0].value)}catch(e){_notification.default.exception(e)}null!==rawPreferences&&Object.keys(rawPreferences).forEach((preference=>{comp=_components.components.find((component=>component.id==preference)),null!=comp&&(variantPreferences[comp.name]=[],rawPreferences[preference].map((variant=>{variantObj=_variants.variants.find((element=>element.id==variant)),null!=variantObj&&variantPreferences[comp.name].push(variantObj.name)})))}))})).catch(_notification.default.exception)};_exports.saveVariantPreferences=()=>{let comp={},rawPreferences={},variantObj={};Object.keys(variantPreferences).forEach((preference=>{comp=_components.components.find((component=>component.name==preference)),null!=comp&&(rawPreferences[comp.id]=[],variantPreferences[preference].map((variant=>{variantObj=_variants.variants.find((element=>element.name==variant)),null!=variantObj&&rawPreferences[comp.id].push(variantObj.id)})))}));const request={methodname:"core_user_update_user_preferences",args:{preferences:[{type:"c4l_components_variants",value:JSON.stringify(rawPreferences)}]}};return _ajax.default.call([request])[0].catch(_notification.default.exception)};const variantExists=(component,variant)=>(null==variantPreferences?void 0:variantPreferences[component])&&-1!==variantPreferences[component].indexOf(variant);_exports.variantExists=variantExists;_exports.getVariantsClass=component=>{let variants=[];return null!=variantPreferences&&variantPreferences[component]&&variantPreferences[component].map((variant=>{variants.push("c4l-"+variant+"-variant")})),variants};_exports.getVariantsHtml=component=>{let variantsHtml="",variantObj={};return null!=variantPreferences&&variantPreferences[component]&&variantPreferences[component].map((variant=>{variantObj=_variants.variants.find((element=>element.name==variant)),null!=variantObj&&(variantsHtml+=variantObj.html)})),variantsHtml};_exports.getVariantHtml=variant=>{let variantHtml=[],variantObj={};return variantObj=_variants.variants.find((element=>element.name==variant)),null!=variantObj&&(variantHtml=variantObj.html),variantHtml};_exports.addVariant=(component,variant)=>{null!=variantPreferences&&variantPreferences[component]||(variantPreferences[component]=[]),variantExists(component,variant)||variantPreferences[component].push(variant)};_exports.removeVariant=(component,variant)=>{const index=variantPreferences[component].indexOf(variant);-1!==index&&delete variantPreferences[component][index]}}));

//# sourceMappingURL=variantslib.min.js.map